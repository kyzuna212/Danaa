/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.57
 * Generated at: 2020-09-25 12:58:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class footer_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(function(){\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\t//AdminController.java위치에 작성\r\n");
      out.write("\t\turl: \"footer.do\",\r\n");
      out.write("\t\ttype: \"post\",\r\n");
      out.write("\t\tdataType : \"json\",\r\n");
      out.write("\t\tsuccess: function(data){\r\n");
      out.write("\t\t\t//json 객체 한 개를 받았을 때는 바로 출력 처리할 수 있음\r\n");
      out.write("\t\t\t//console.log(\"data : \" + data);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//object ==> string 으로 변환\r\n");
      out.write("\t\t\tvar jsonStr = JSON.stringify(data);\r\n");
      out.write("\t\t\t//string ==> json 객체로 바꿈\r\n");
      out.write("\t\t\tvar json = JSON.parse(jsonStr);\r\n");
      out.write("\t\t\t $(\"#adminName1\").html(decodeURIComponent(json.admin_name.replace(/\\+/gi, \" \")));\r\n");
      out.write("\t\t\t $(\"#adminName2\").html(decodeURIComponent(json.admin_name.replace(/\\+/gi, \" \")));\r\n");
      out.write("\t\t\t $(\"#adminPerson\").html(decodeURIComponent(json.admin_person.replace(/\\+/gi, \" \")));\r\n");
      out.write("\t\t\t $(\"#adminNo\").html(decodeURIComponent(json.admin_no.replace(/\\+/gi, \" \")));\r\n");
      out.write("\t\t\t $(\"#adminTel\").html(decodeURIComponent(json.admin_tel.replace(/\\+/gi, \" \")));\r\n");
      out.write("\t\t\t $(\"#adminFax\").html(decodeURIComponent(json.admin_fax.replace(/\\+/gi, \" \")));\r\n");
      out.write("\t\t\t $(\"#adminAdd1\").html(decodeURIComponent(json.admin_add).replace(/\\+/gi, \" \").replace(/,/gi, \" \"));\r\n");
      out.write("\t\t\t $(\"#adminAdd2\").html(decodeURIComponent(json.admin_add).replace(/\\+/gi, \" \").replace(/,/gi, \" \"));\r\n");
      out.write("\t\t\t $(\"#adminTime\").html(decodeURIComponent(json.admin_time.replace(/\\+/gi, \" \")));\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror: function(request, status, errorData){\r\n");
      out.write("\t\t\tconsole.log(\"error code : \" + request.status\r\n");
      out.write("\t\t\t\t\t+ \"\\nMessage : \" + request.responseText\r\n");
      out.write("\t\t\t\t\t+ \"\\nError : \" + errorData);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("<div id=\"d1\"></div>\r\n");
      out.write("\r\n");
      out.write("<footer id=\"footer\">\r\n");
      out.write("\t<div class=\"footer_in\">\r\n");
      out.write("\t\t<div class=\"cont\">\r\n");
      out.write("\t\t\t<div class=\"footer_info\">\r\n");
      out.write("\t\t\t\t<div class=\"footer_map\">\r\n");
      out.write("\t\t\t\t\t<!-- * 카카오맵 - 지도퍼가기 -->\r\n");
      out.write("\t\t\t\t\t<!-- 1. 지도 노드 -->\r\n");
      out.write("\t\t\t\t\t<div id=\"daumRoughmapContainer1599715578408\" class=\"root_daum_roughmap root_daum_roughmap_landing\"></div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<!--\r\n");
      out.write("\t\t\t\t\t\t2. 설치 스크립트\r\n");
      out.write("\t\t\t\t\t\t* 지도 퍼가기 서비스를 2개 이상 넣을 경우, 설치 스크립트는 하나만 삽입합니다.\r\n");
      out.write("\t\t\t\t\t-->\r\n");
      out.write("\t\t\t\t\t<script charset=\"UTF-8\" class=\"daum_roughmap_loader_script\" src=\"https://ssl.daumcdn.net/dmaps/map_js_init/roughmapLoader.js\"></script>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<!-- 3. 실행 스크립트 -->\r\n");
      out.write("\t\t\t\t\t<script charset=\"UTF-8\">\r\n");
      out.write("\t\t\t\t\t\tnew daum.roughmap.Lander({\r\n");
      out.write("\t\t\t\t\t\t\t\"timestamp\" : \"1599715578408\",\r\n");
      out.write("\t\t\t\t\t\t\t\"key\" : \"2zyek\",\r\n");
      out.write("\t\t\t\t\t\t\t\"mapWidth\" : \"652\",\r\n");
      out.write("\t\t\t\t\t\t\t\"mapHeight\" : \"370\"\r\n");
      out.write("\t\t\t\t\t\t}).render();\r\n");
      out.write("\t\t\t\t\t</script>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<!-- 시간및링크 -->\r\n");
      out.write("\t\t\t\t<div class=\"footerlist\">\r\n");
      out.write("\t\t\t\t\t<!-- 주소 -->\r\n");
      out.write("\t\t\t\t\t<div class=\"Add\">\r\n");
      out.write("\t\t\t\t\t\t<b>· 을지로본점</b>\r\n");
      out.write("\t\t\t\t\t\t<p id=\"adminAdd1\"></p>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<!-- //주소 -->\r\n");
      out.write("\t\t\t\t\t<section>\r\n");
      out.write("\t\t\t\t\t\t<!-- 진료시간 -->\r\n");
      out.write("\t\t\t\t\t\t<div class=\"Time\">\r\n");
      out.write("\t\t\t\t\t\t\t<b>· 진료시간 안내</b>\r\n");
      out.write("\t\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t\t<li id=\"adminTime\"></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t<li>평일 점심시간: pm13:00~pm14:00</li>\r\n");
      out.write("\t\t\t\t\t\t\t\t<li>일요일/공휴일 휴무</li>\r\n");
      out.write("\t\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<!-- 진료시간 -->\r\n");
      out.write("\t\t\t\t\t</section>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<!-- 주차정보 -->\r\n");
      out.write("\t\t\t\t\t<div class=\"Parking\">\r\n");
      out.write("\t\t\t\t\t\t<b>· 주차안내</b>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li>병원 건물 주차장 주차 가능</li>\r\n");
      out.write("\t\t\t\t\t\t\t<li>신한은행 주차장 주차 가능 (서울특별시 중구 남대문로 120 대일빌딩)</li>\r\n");
      out.write("\t\t\t\t\t\t\t<li>강남 주차장 주차 가능 (서울특별시 중구 남대문로 120 대일빌딩)</li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- footer_bottom:s -->\r\n");
      out.write("\t\t<div class=\"footer_bottom\">\r\n");
      out.write("\t\t\t<div class=\"InnerContainer\">\r\n");
      out.write("\t\t\t\t<dl>\r\n");
      out.write("\t\t\t\t\t<dt>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.servletContext.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/main.do\" class=\" BranchFor \"><img src=\"resources/images/logo_w.png\" alt=\"미앤란로고\"></a>\r\n");
      out.write("\t\t\t\t\t</dt>\r\n");
      out.write("\t\t\t\t\t<dd>\r\n");
      out.write("\t\t\t\t\t\t주소 : <span id=\"adminAdd2\"></span> / 대표 : <span id=\"adminPerson\"></span><br>\r\n");
      out.write("\t\t\t\t\t\t사업자등록번호 : <span id=\"adminNo\"></span> / 사업자명 : <span id=\"adminName1\"></span> / \r\n");
      out.write("\t\t\t\t\t\t사이트명 : <span id=\"adminName2\"></span> / 대표전화 : <span id=\"adminTel\"></span> / \r\n");
      out.write("\t\t\t\t\t\t팩스번호 : <span id=\"adminFax\"></span><br>\r\n");
      out.write("\t\t\t\t\t\tCopyright(c) 2003~2020 danaa.co.kr All rights reserved.\r\n");
      out.write("\t\t\t\t\t</dd>\r\n");
      out.write("\t\t\t\t</dl>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- footer_bottom:e -->\r\n");
      out.write("\t</div>\r\n");
      out.write("</footer>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
