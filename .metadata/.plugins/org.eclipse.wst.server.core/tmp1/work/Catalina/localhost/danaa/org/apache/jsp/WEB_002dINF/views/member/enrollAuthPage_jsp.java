/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.57
 * Generated at: 2020-11-04 14:24:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class enrollAuthPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/dev/framework-workspace/danaa/danaa/src/main/webapp/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1598506533000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvar_005fvalue;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvar_005fvalue = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvar_005fvalue.release();
    _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>MNR CLINIC</title>\r\n");
      out.write("<!-- 회원가입STEP02 약관동의 페이지 -->\r\n");
      out.write("\r\n");
      out.write("<!--맨 밑 footer만 보이게 설정-->\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("#footer .footer_in .cont {\r\n");
      out.write("\tdisplay: none;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\t//전체 동의 checkbox 클릭시 자동으로 밑에 체크 박스 선택됨\r\n");
      out.write("\tfunction allagree(objCheck) { \r\n");
      out.write("\t\tvar checks = document.getElementsByName('jagree');\r\n");
      out.write("\t\tfor (var i = 0; i < checks.length; i++) {\r\n");
      out.write("\t\t\tchecks[i].checked = objCheck;\r\n");
      out.write("\t// name이 'jagree' 인 checkbox는  id가 allagree인 checkbox의 checked 상태와 같게 된다. \r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t///약관을 각각 체크하면 모두 동의에 체크됨\r\n");
      out.write("\tfunction eachagree(){ \r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(($(\"#jagree1\").is(\":checked\")==true) && ($(\"#jagree2\").is(\":checked\")==true)){\t\t\t\r\n");
      out.write("\t\t\t$(\"#allagree\").prop('checked', true);\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}else{\t\t\t\r\n");
      out.write("\t\t\t$(\"#allagree\").prop('checked', false);\t\t\t\r\n");
      out.write("\t\t}\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t //ajax로 보호자 휴대폰 인증번호 요청 \r\n");
      out.write("\t//보호자 휴대폰 인증번호 요청\t\r\n");
      out.write("\tvar key = 0;//인증번호 확인을 위한 전역 변수\r\n");
      out.write("\t\r\n");
      out.write("\tvar x =0; //함수 초기화\r\n");
      out.write("\tfunction enrollSubmit2() {\r\n");
      out.write("\t\t // 휴대폰 번호 정규식\r\n");
      out.write("\t\t var phoneJ = /^01([0|1|6|7|8|9]?)?([0-9]{3,4})?([0-9]{4})$/;  \r\n");
      out.write("\t \r\n");
      out.write("\t\t if (phoneJ.test($('#phone').val())) {//휴대폰 유효성 검사 통과시\r\n");
      out.write("\t\t\tconsole.log(\"휴대폰 유효성 검사 통과\");\r\n");
      out.write("\t\t\t $.ajax({\r\n");
      out.write("\t\t\t\turl : \"/danaa/test7.do\",\r\n");
      out.write("\t\t\t\ttype : \"post\",\r\n");
      out.write("\t\t\t\tdata : {\r\n");
      out.write("\t\t\t\t\tphone : $(\"#phone\").val()\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tsuccess : function(keycode) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t$('.phonekey').val('');//인증번호 클릭후 리셋\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif (keycode == '') {\r\n");
      out.write("\t\t\t\t\t\talert(\"휴대폰 문자 전송에 실패 했습니다.\");\r\n");
      out.write("\t\t\t\t\t\t$(\"#phone\").focus();\r\n");
      out.write("\t\t\t\t\t\t$('#phone').focus(function() { //포커스가 phone으로 처음가면 멘트 리셋\r\n");
      out.write("\t\t\t\t\t\t\t$('#phone_check').text('');\t\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\talert(\"인증번호 전송이 완료되었습니다\");\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tclearInterval(x);\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t$('#phone_check').text('');\r\n");
      out.write("\t\t\t\t\t\t$(\"#phone_chk_com\").show();\r\n");
      out.write("\t\t\t\t\t\t$(\"#demo\").show();\r\n");
      out.write("\t\t\t\t\t\tkey = keycode;\r\n");
      out.write("\t\t\t\t\t\tconsole.log('key 값');\r\n");
      out.write("\t\t\t\t\t\tconsole.log(keycode);\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tphonesend = 1 ; //인증번호 전송이 완료됬다면\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t//휴대폰 인증번호 타이머 만들기 :s\r\n");
      out.write("\t\t\t\t\t\tvar time = 180; //기준시간 작성  180\r\n");
      out.write("\t\t\t\t\t\tvar min = \"\"; //분\r\n");
      out.write("\t\t\t\t\t\tvar sec = \"\"; //초\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t//setInterval(함수,시간) : 주기적인 실행\r\n");
      out.write("\t\t\t\t\t\tx = setInterval(function(){\r\n");
      out.write("\t\t\t\t\t\t\t//parseInt() : 정수를 반환\r\n");
      out.write("\t\t\t\t\t\t\t//몫을 계산\r\n");
      out.write("\t\t\t\t\t\t\tmin = parseInt(time/60); \r\n");
      out.write("\t\t\t\t\t\t\tsec = time%60; //나머지를 계산\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\tdocument.getElementById(\"demo\").innerHTML = min+\"분\"+sec+\"초\";\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\ttime--;\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t//타임아웃시\r\n");
      out.write("\t\t\t\t\t\t\tif(time<0){\r\n");
      out.write("\t\t\t\t\t\t\t\tphonesend=0;//타이머가 완료되면 0으로 리셋\r\n");
      out.write("\t\t\t\t\t\t\t\tclearInterval(x);//setInterval()실행 끝\r\n");
      out.write("\t\t\t\t\t\t\t\tdocument.getElementById(\"demo\").innerHTML =\"인증시간 초과\";\r\n");
      out.write("\t\t\t\t\t\t\t\t$('#phone').focus(function() { //포커스가 phone으로 가면 리셋\r\n");
      out.write("\t\t\t\t\t\t\t\t\tdocument.getElementById(\"demo\").innerHTML =\"\";\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}, 1000);//휴대폰 인증번호 :e\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror : function(jqXHP, textstatus, errorthrown) {\r\n");
      out.write("\t\t\t\t\tconsole.log(\"error : \" + jqXHR + \", \" + textstatus + \", \"\r\n");
      out.write("\t\t\t\t\t\t\t+ errorthrown);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t} else {//휴대폰 유효성 검사에 적합하지 않을 경우 \r\n");
      out.write("\t\t\t$('#phone_check').text('휴대폰 번호 형식이 맞지 않습니다');\r\n");
      out.write("\t\t\t$('#phone_check').css('color', 'red');\r\n");
      out.write("\t\t\t$('#phone').focus(function() { //포커스가 phone으로 가면 리셋\r\n");
      out.write("\t\t\t\t$('#phone_check').text('');\t\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\t \r\n");
      out.write("\t\r\n");
      out.write("\t//인증번호 확인:s\r\n");
      out.write("\t function checkKey() {\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//인증번호 전송 완료, 인증번호 확인과 일치\r\n");
      out.write("\t\t\tif($('#phonekey').val() != key && phonesend==1){\r\n");
      out.write("\t\t\t\tconsole.log('인증번호 key');\r\n");
      out.write("\t\t\t\tconsole.log(key);\r\n");
      out.write("\t\t\t\t$('#phone_check').text('인증번호가 일치하지 않습니다');//인증번호와 불일치시\r\n");
      out.write("\t\t\t\t$('#phone_check').css('color', 'red');\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//인증번호 전송 완료되지 않음 or 완료됬으나 인증번호 시간 만료됨\t\r\n");
      out.write("\t\t\t}else if(phonesend==0){\r\n");
      out.write("\t\t\t\t$('#phone_check').text('인증번호 전송을 클릭해주세요');\r\n");
      out.write("\t\t\t\t$('#phone_check').css('color', 'red');\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//인증번호 전송 완료but,인증번호 확인과 불일치\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tclearInterval(x);\r\n");
      out.write("\t\t\t\t$(\"#phone_chk_com\").hide();\r\n");
      out.write("\t\t\t\t$(\"#demo\").hide();\r\n");
      out.write("\t\t\t\t$('#phone_check').text('인증 완료');//인증번호와 일치시\r\n");
      out.write("\t\t\t\t$('#phone_check').css('color', 'blue');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t}//인증번호 확인:e\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t//다음단계로 이동하기 전에 약관 체크 다 되있는지 확인\r\n");
      out.write("\tfunction checkNext(){\r\n");
      out.write("\t\tif(($(\"#allagree\").is(\":checked\")==false) || ($(\"#jagree1\").is(\":checked\")==false) ||($(\"#jagree2\").is(\":checked\")==false)){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\talert(\"모든 약관에 동의 하셔야 다음 단계로 이동하실 수 있습니다 \");\t\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t//휴대폰 유효성 검사 \r\n");
      out.write("\t\t\tvar phoneJ = /^01([0|1|6|7|8|9]?)?([0-9]{3,4})?([0-9]{4})$/;  \r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar test = '");
      out.print((String)session.getAttribute("child"));
      out.write("';\r\n");
      out.write("\t\t\tvar id = '");
      out.print((String)session.getAttribute("id"));
      out.write("';\r\n");
      out.write("\t\t\t\t//일반 회원/14세 미만일때,휴대폰 유효성 검사 통과시\r\n");
      out.write("\t\t\t if (phoneJ.test($('#phone').val()) &&($('#phone_check').text('인증 완료')) && test=='Y') { \r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t return true;\r\n");
      out.write("\t\t\t }else if(test=='N'){//14세 이상일 때\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t return true;\r\n");
      out.write("\t\t\t }else if($('#phone').val()==''){//휴대폰 번호가 없을 때\r\n");
      out.write("\t\t\t\t alert('휴대폰 번호를 입력해주세요');\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t return false;\r\n");
      out.write("\t\t\t }else{// 그밖에\r\n");
      out.write("\t\t\t\t alert('보호자 인증을 해주세요');\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t return false;\r\n");
      out.write("\t\t\t }\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fimport_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- header -->\r\n");
      if (_jspx_meth_c_005fimport_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- subPageTop:s 서브페이지 상단 제목 공통-->\r\n");
      out.write("\t<div class=\"subPageTop\">\r\n");
      out.write("\t\t<div class=\"sub\">\r\n");
      out.write("\t\t\t<div class=\"s_top_gp_wrap\">\r\n");
      out.write("\t\t\t\t<img src=\"resources/images/sub_top_join_01.jpg\">\r\n");
      out.write("\t\t\t\t<div class=\"title_wrap\">\r\n");
      out.write("\t\t\t\t\t<p>회원가입</p>\r\n");
      out.write("\t\t\t\t\t<p>MNR CLINIC JOIN</p>\r\n");
      out.write("\t\t\t\t\t<p>회원으로 가입하시면 더욱 다양한 컨텐츠 및 서비스를 받아보실 수 있습니다.</p>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<nav class=\"sub_navi\">\r\n");
      out.write("\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t<li><a\r\n");
      out.write("\t\t\t\t\t\thref=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.servletContext.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/main.do\"\r\n");
      out.write("\t\t\t\t\t\ttitle=\"홈 바로가기\"> <span class=\"ti-home\"></span> Home\r\n");
      out.write("\t\t\t\t\t</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.servletContext.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/enrollfp.do\" title=\"회원가입\">회원가입</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.servletContext.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/tospage.do\" title=\"약관동의\">약관동의</a></li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</nav>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div><!-- subPageTop:e 서브페이지 상단 제목 공통-->\r\n");
      out.write("<div id=\"enrollA_allwrap\"><!-- 전체 :s -->\t\r\n");
      out.write("\t<div id=\"wrap\">\r\n");
      out.write("\t\t<div class=\"enroll_bar\">\r\n");
      out.write("\t\t\t<div class=\"sub-title\">\r\n");
      out.write("\t\t\t\t<h3>약관동의</h3>\r\n");
      out.write("\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t<p>약관 동의를 해주셔야 서비스 이용이 가능합니다</p>\r\n");
      out.write("\t\t\t\t<hr>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- wrap 끝 -->\r\n");
      out.write("\t<!-- 여기까지 bar -->\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<!--section joinWrap:s-->\r\n");
      out.write("\t\t\t<section id=\"authWrap\">\r\n");
      out.write("\t\t\t");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<div class=\"allcheck\">\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<input type=\"checkbox\" id=\"allagree\" name=\"allagree\" onclick=\"allagree(this.checked);\" \r\n");
      out.write("\t\t\t\t\t\ttitle=\"아래 내용에 모두 동의합니다 .\"> <label for=\"allagree\">\r\n");
      out.write("\t\t\t\t\t\t아래 내용에 모두 동의합니다 .</label>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<!--join_top:s-->\r\n");
      out.write("\t\t\t\t<div class=\"auth_top\">\r\n");
      out.write("\t\t\t\t\t<div class=\"authBoxWrap\">\r\n");
      out.write("\t\t\t\t\t\t<h3>\r\n");
      out.write("\t\t\t\t\t\t\t서비스 이용약관 <span class=\"colorPoint requiredTxt\">(*필수사항)</span>\r\n");
      out.write("\t\t\t\t\t\t</h3>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"authBox\">\r\n");
      out.write("\t\t\t\t\t\t\t<p class=\"jtxt\">\r\n");
      out.write("\t\t\t\t\t\t\t\t제1조(목적)<br> 이 약관은 미앤란 클리닉(이하 “회사”라 한다)이 운영하는 인터넷 웹사이트에서\r\n");
      out.write("\t\t\t\t\t\t\t\t제공하는 서비스를 이용함에 있어 이용자의 권리,의무 및 책임사항을 규정함을 목적으로 합니다.<br>\r\n");
      out.write("\t\t\t\t\t\t\t\t※「PC통신, 무선 등을 이용하는 전자상거래에 대해서도 그 성질에 반하지 않는 한 이 약관을 준용합니다」<br>\r\n");
      out.write("\t\t\t\t\t\t\t\t<br> 제2조(정의)<br> ① “회사”란 재화 또는 용역(이하 “재화등”이라 함)을 이용자에게\r\n");
      out.write("\t\t\t\t\t\t\t\t제공하기 위하여 컴퓨터등 정보통신설비를 이용하여 재화등을 거래할 수 있도록 설정한 가상의 영업장을 말합니다.<br>\r\n");
      out.write("\t\t\t\t\t\t\t\t② “이용자”란 “사이트”에 접속하여 이 약관에 따라 “회사”가 제공하는 “서비스”를 받는 회원 및 비회원을\r\n");
      out.write("\t\t\t\t\t\t\t\t말합니다.<br> ③ “미앤란 클리닉 회원”(이하 \"회원\"이라 한다)이란 “회사”에 개인정보를 제공하여\r\n");
      out.write("\t\t\t\t\t\t\t\t회원등록을 하고 회원ID를 부여받은 자 또는 그 회원전체를 의미하며, 부여받은 회원ID로 “회사”의 정보를\r\n");
      out.write("\t\t\t\t\t\t\t\t지속적으로 제공받으며, “회사”가 제공하는 “서비스”를 계속적으로 이용할 수 있는 자를 말합니다.<br>\r\n");
      out.write("\t\t\t\t\t\t\t\t④ “비회원”란 회원에 가입하지 않고 “회사”가 제공하는 “서비스”를 이용하는 자를 말합니다.<br> ⑤\r\n");
      out.write("\t\t\t\t\t\t\t\t\"미앤란 클리닉 사이트\"(이하 \"사이트\"라 한다)란 \"회사\"에 회원등록한 이용자가 다양한 정보와 서비스를 제공받을\r\n");
      out.write("\t\t\t\t\t\t\t\t수 있도록 \"회사\" 또는 \"회원사\"가 제작, 운영하는 인터넷 웹사이트를 의미합니다.<br> <br>\r\n");
      out.write("\t\t\t\t\t\t\t\t제3조 (약관등의 명시와 설명 및 개정)<br> ① “회사”는 이 약관의 내용과 상호 및 대표자 성명,\r\n");
      out.write("\t\t\t\t\t\t\t\t영업소 소재지 주소(소비자의 불만을 처리할 수 있는 곳의 주소를 포함), 전화번호.모사전송번호.전자우편주소,\r\n");
      out.write("\t\t\t\t\t\t\t\t사업자등록번호, 통신판매업신고번호, 개인정보관리책임자등을 이용자가 쉽게 알 수 있도록 미앤란 클리닉 사이트의 초기\r\n");
      out.write("\t\t\t\t\t\t\t\t서비스화면(전면)에 게시합니다. 다만, 약관의 내용은 이용자가 연결화면을 통하여 볼 수 있도록 할 수 있습니다.<br>\r\n");
      out.write("\t\t\t\t\t\t\t\t② “회사”는 전자상거래등에서의 소비자보호에관한법률, 약관의규제에관한법률, 전자거래기본법, 전자서명법,\r\n");
      out.write("\t\t\t\t\t\t\t\t정보통신망이용촉진등에관한법률, 소비자보호법 등 관련법을 위배하지 않는 범위에서 이 약관을 개정할 수 있습니다.<br>\r\n");
      out.write("\t\t\t\t\t\t\t\t③ “회사”가 약관을 개정할 경우에는 적용일자 및 개정사유를 명시하여 현행약관과 함께 몰의 초기화면에 그 적용일자\r\n");
      out.write("\t\t\t\t\t\t\t\t7일이전부터 적용일자 전일까지 공지합니다. 다만, 이용자에게 불리하게 약관내용을 변경하는 경우에는 최소한 30일\r\n");
      out.write("\t\t\t\t\t\t\t\t이상의 사전 유예기간을 두고 공지합니다. 이 경우 \"회사“는 개정전 내용과 개정후 내용을 명확하게 비교하여 이용자가\r\n");
      out.write("\t\t\t\t\t\t\t\t알기 쉽도록 표시합니다.<br> ④ “회사”가 약관을 개정할 경우에는 그 개정약관은 그 적용일자 이후에\r\n");
      out.write("\t\t\t\t\t\t\t\t체결되는 계약에만 적용되고 그 이전에 이미 체결된 계약에 대해서는 개정전의 약관조항이 그대로 적용됩니다. 다만 이미\r\n");
      out.write("\t\t\t\t\t\t\t\t계약을 체결한 이용자가 개정약관 조항의 적용을 받기를 원하는 뜻을 제3항에 의한 개정약관의 공지기간내에 ‘회사“에\r\n");
      out.write("\t\t\t\t\t\t\t\t송신하여 ”회사“의 동의를 받은 경우에는 개정약관 조항이 적용됩니다.<br> ⑤ 이 약관에서 정하지 아니한\r\n");
      out.write("\t\t\t\t\t\t\t\t사항과 이 약관의 해석에 관하여는 전자상거래등에서의 소비자보호에관한법률, 약관의규제등에관한법률, 공정거래위원회가\r\n");
      out.write("\t\t\t\t\t\t\t\t정하는 전자상거래등에서의소비자보호지침 및 관계법령 또는 상관례에 따릅니다.<br> <br>\r\n");
      out.write("\t\t\t\t\t\t\t\t제4조(서비스의 제공 및 변경)<br> ① “회사”는 다음과 같은 업무를 수행합니다.<br> 상품\r\n");
      out.write("\t\t\t\t\t\t\t\t또는 용역의 판매 다양한 정보의 제공 광고, 이벤트 행사 등 상품 또는 용역과 관련한 다양한 판촉 행위 기타\r\n");
      out.write("\t\t\t\t\t\t\t\t이용자에게 유용한 부가 서비스 ② “회사”는 재화 또는 용역의 품절 또는 기술적 사양의 변경 등의 경우에는 장차\r\n");
      out.write("\t\t\t\t\t\t\t\t체결되는 계약에 의해 제공할 재화 또는 용역의 내용을 변경할 수 있습니다. 이 경우에는 변경된 재화 또는 용역의\r\n");
      out.write("\t\t\t\t\t\t\t\t내용 및 제공일자를 명시하여 현재의 재화 또는 용역의 내용을 게시한 곳에 즉시 공지합니다.<br> ③\r\n");
      out.write("\t\t\t\t\t\t\t\t“회사”가 제공하기로 이용자와 계약을 체결한 서비스의 내용을 재화등의 품절 또는 기술적 사양의 변경 등의 사유로\r\n");
      out.write("\t\t\t\t\t\t\t\t변경할 경우에는 그 사유를 이용자에게 통지 가능한 주소로 즉시 통지합니다.<br> ④ 전항의 경우\r\n");
      out.write("\t\t\t\t\t\t\t\t“회사”는 이로 인하여 이용자가 입은 손해를 배상합니다. 다만, “회사”가 고의 또는 과실이 없음을 입증하는\r\n");
      out.write("\t\t\t\t\t\t\t\t경우에는 그러하지 아니합니다.<br> <br> 제5조(서비스의 중단)<br> ①\r\n");
      out.write("\t\t\t\t\t\t\t\t“회사”는 컴퓨터 등 정보통신설비의 보수점검.교체 및 고장, 통신의 두절 등의 사유가 발생한 경우에는 서비스의\r\n");
      out.write("\t\t\t\t\t\t\t\t제공을 일시적으로 중단할 수 있습니다.<br> ② “회사”는 제1항의 사유로 서비스의 제공이 일시적으로\r\n");
      out.write("\t\t\t\t\t\t\t\t중단됨으로 인하여 이용자 또는 제3자가 입은 손해에 대하여 배상합니다. 단, “회사”가 고의 또는 과실이 없음을\r\n");
      out.write("\t\t\t\t\t\t\t\t입증하는 경우에는 그러하지 아니합니다.<br> ③ 사업종목의 전환, 사업의 포기, 업체간의 통합 등의\r\n");
      out.write("\t\t\t\t\t\t\t\t이유로 서비스를 제공할 수 없게 되는 경우에는 “회사”는 제8조에 정한 방법으로 이용자에게 통지하고 당초\r\n");
      out.write("\t\t\t\t\t\t\t\t“회사”에서 제시한 조건에 따라 소비자에게 보상합니다. 다만, “회사”가 보상기준 등을 고지하지 아니한 경우에는\r\n");
      out.write("\t\t\t\t\t\t\t\t이용자들의 마일리지 또는 적립금 등을 “회사”에서 통용되는 통화가치에 상응하는 현물 또는 현금으로 이용자에게\r\n");
      out.write("\t\t\t\t\t\t\t\t지급합니다.<br> <br> 제6조(회원가입)<br> ① 이용자는 “회사”가 정한 가입\r\n");
      out.write("\t\t\t\t\t\t\t\t양식에 따라 회원정보를 기입한 후 이 약관에 동의한다는 의사표시를 함으로서 회원가입을 신청합니다.<br>\r\n");
      out.write("\t\t\t\t\t\t\t\t② “회사”는 제1항과 같이 회원으로 가입할 것을 신청한 이용자 중 다음 각호에 해당하지 않는 한 회원으로\r\n");
      out.write("\t\t\t\t\t\t\t\t등록합니다.<br> 1. 가입신청자가 이 약관 제7조제3항에 의하여 이전에 회원자격을 상실한 적이 있는\r\n");
      out.write("\t\t\t\t\t\t\t\t경우, 다만 제7조제3항에 의한 회원자격 상실 후 3년이 경과한 자로서 “회사”의 회원재가입 승낙을 얻은 경우에는\r\n");
      out.write("\t\t\t\t\t\t\t\t예외로 한다.<br> 2. 등록 내용에 허위, 기재누락, 오기가 있는 경우<br> 3. 기타\r\n");
      out.write("\t\t\t\t\t\t\t\t회원으로 등록하는 것이 “회사”의 기술상 현저히 지장이 있다고 판단되는 경우<br> ③ 회원가입계약의\r\n");
      out.write("\t\t\t\t\t\t\t\t성립시기는 “회사”의 승낙이 회원에게 도달한 시점으로 합니다.<br> ④ 회원은 제15조제1항에 의한\r\n");
      out.write("\t\t\t\t\t\t\t\t등록사항에 변경이 있는 경우, 즉시 전자우편 기타 방법으로 “회사”에 대하여 그 변경사항을 알려야 합니다.<br>\r\n");
      out.write("\t\t\t\t\t\t\t\t<br> 제7조(회원 탈퇴 및 자격 상실 등)<br> ① 회원은 “회사”에 언제든지 탈퇴를 요청할\r\n");
      out.write("\t\t\t\t\t\t\t\t수 있으며 “회사”는 즉시 회원탈퇴를 처리합니다.<br> ② 회원이 다음 각호의 사유에 해당하는 경우,\r\n");
      out.write("\t\t\t\t\t\t\t\t“회사”는 회원자격을 제한 및 정지시킬 수 있습니다.<br> 1. 가입 신청시에 허위 내용을 등록한 경우<br>\r\n");
      out.write("\t\t\t\t\t\t\t\t2. “회사”을 이용하여 구입한 재화등의 대금, 기타 “회사”가용에 관련하여 회원이 부담하는 채무를 기일에 지급하지\r\n");
      out.write("\t\t\t\t\t\t\t\t않는 경우<br> 3. 다른 사람의 “회사” 이용을 방해하거나 그 정보를 도용하는 등 전자상거래 질서를\r\n");
      out.write("\t\t\t\t\t\t\t\t위협하는 경우<br> 4. “회사”을 이용하여 법령 또는 이 약관이 금지하거나 공서양속에 반하는 행위를\r\n");
      out.write("\t\t\t\t\t\t\t\t하는 경우<br> ③ “회사”가 회원 자격을 제한.정지 시킨후, 동일한 행위가 2회이상 반복되거나\r\n");
      out.write("\t\t\t\t\t\t\t\t30일이내에 그 사유가 시정되지 아니하는 경우 “회사”는 회원자격을 상실시킬 수 있습니다.<br> ④\r\n");
      out.write("\t\t\t\t\t\t\t\t“회사”가 회원자격을 상실시키는 경우에는 회원등록을 말소합니다. 이 경우 회원에게 이를 통지하고, 회원등록 말소전에\r\n");
      out.write("\t\t\t\t\t\t\t\t최소한 30일 이상의 기간을 정하여 소명할 기회를 부여합니다.<br> <br> 제8조(회원에 대한\r\n");
      out.write("\t\t\t\t\t\t\t\t통지)<br> ① “회사”가 회원에 대한 통지를 하는 경우, 회원이 “회사”와 미리 약정하여 지정한\r\n");
      out.write("\t\t\t\t\t\t\t\t전자우편 주소로 할 수 있습니다.<br> ② “회사”는 불특정다수 회원에 대한 통지의 경우 1주일이상\r\n");
      out.write("\t\t\t\t\t\t\t\t“회사” 게시판에 게시함으로서 개별 통지에 갈음할 수 있습니다. 다만, 회원 본인의 거래와 관련하여 중대한 영향을\r\n");
      out.write("\t\t\t\t\t\t\t\t미치는 사항에 대하여는 개별통지를 합니다.<br> <br> 제9조(회사의 의무)<br>\r\n");
      out.write("\t\t\t\t\t\t\t\t① “회사”는 법령과 이 약관이 금지하거나 공서양속에 반하는 행위를 하지 않으며 이 약관이 정하는 바에 따라\r\n");
      out.write("\t\t\t\t\t\t\t\t지속적이고, 안정적으로 재화․용역을 제공하는데 최선을 다하여야 합니다.<br> ② “회사”는 이용자가\r\n");
      out.write("\t\t\t\t\t\t\t\t안전하게 인터넷 서비스를 이용할 수 있도록 이용자의 개인정보(신용정보 포함)보호를 위한 보안 시스템을 갖추어야\r\n");
      out.write("\t\t\t\t\t\t\t\t합니다.<br> ③ “회사”가 상품이나 용역에 대하여 「표시.광고의공정화에관한법률」 제3조 소정의 부당한\r\n");
      out.write("\t\t\t\t\t\t\t\t표시․광고행위를 함으로써 이용자가 손해를 입은 때에는 이를 배상할 책임을 집니다.<br> ④ “회사”는\r\n");
      out.write("\t\t\t\t\t\t\t\t이용자가 원하지 않는 영리목적의 광고성 전자우편을 발송하지 않습니다.<br> <br>\r\n");
      out.write("\t\t\t\t\t\t\t\t제10조(회원의 ID 및 비밀번호에 대한 의무)<br> ① 제9조의 경우를 제외한 ID와 비밀번호에 관한\r\n");
      out.write("\t\t\t\t\t\t\t\t관리책임은 회원에게 있습니다.<br> ② 회원은 자신의 ID 및 비밀번호를 제3자에게 이용하게 해서는\r\n");
      out.write("\t\t\t\t\t\t\t\t안됩니다.<br> ③ 회원이 자신의 ID 및 비밀번호를 도난당하거나 제3자가 사용하고 있음을 인지한\r\n");
      out.write("\t\t\t\t\t\t\t\t경우에는 바로 “회사”에 통보하고 “회사”의 안내가 있는 경우에는 그에 따라야 합니다.<br> <br>\r\n");
      out.write("\t\t\t\t\t\t\t\t제11조(이용자의 의무)<br> 이용자는 다음 행위를 하여서는 안됩니다.<br> 1. 신청 또는\r\n");
      out.write("\t\t\t\t\t\t\t\t변경시 허위 내용의 등록<br> 2. 타인의 정보 도용<br> 3. “회사”에 게시된 정보의 변경<br>\r\n");
      out.write("\t\t\t\t\t\t\t\t4. “회사”가 정한 정보 이외의 정보(컴퓨터 프로그램 등) 등의 송신 또는 게시<br> 5. “회사”\r\n");
      out.write("\t\t\t\t\t\t\t\t기타 제3자의 저작권 등 지적재산권에 대한 침해<br> 6. “회사” 기타 제3자의 명예를 손상시키거나\r\n");
      out.write("\t\t\t\t\t\t\t\t업무를 방해하는 행위<br> 7. 외설 또는 폭력적인 메시지, 화상, 음성, 기타 공서양속에 반하는 정보를\r\n");
      out.write("\t\t\t\t\t\t\t\t몰에 공개 또는 게시하는 행위<br> <br> 제12조(사이트 연결)<br> ① 상위\r\n");
      out.write("\t\t\t\t\t\t\t\t“회사”와 하위 “회사”가 하이퍼 링크(예: 하이퍼 링크의 대상에는 문자, 그림 및 동화상 등이 포함됨)방식 등으로\r\n");
      out.write("\t\t\t\t\t\t\t\t연결된 경우, 전자를 연결 “회사”(웹 사이트)이라고 하고 후자를 피연결 “회사”(웹사이트)이라고 합니다.<br>\r\n");
      out.write("\t\t\t\t\t\t\t\t② 연결“회사”는 피연결“회사”가 독자적으로 제공하는 재화등에 의하여 이용자와 행하는 거래에 대해서 보증책임을 지지\r\n");
      out.write("\t\t\t\t\t\t\t\t않는다는 뜻을 연결“회사”의 초기화면 또는 연결되는 시점의 팝업화면으로 명시한 경우에는 그 거래에 대한 보증책임을\r\n");
      out.write("\t\t\t\t\t\t\t\t지지 않습니다.<br> <br> 제13조(저작권의 귀속 및 이용제한)<br> ①\r\n");
      out.write("\t\t\t\t\t\t\t\t“회사“가 작성한 저작물에 대한 저작권 기타 지적재산권은 ”회사“에 귀속합니다.<br> ② 이용자는\r\n");
      out.write("\t\t\t\t\t\t\t\t“회사”을 이용함으로써 얻은 정보 중 “회사”에게 지적재산권이 귀속된 정보를 “회사”의 사전 승낙없이 복제, 송신,\r\n");
      out.write("\t\t\t\t\t\t\t\t출판, 배포, 방송 기타 방법에 의하여 영리목적으로 이용하거나 제3자에게 이용하게 하여서는 안됩니다.<br>\r\n");
      out.write("\t\t\t\t\t\t\t\t③ “회사”는 약정에 따라 이용자에게 귀속된 저작권을 사용하는 경우 당해 이용자에게 통보하여야 합니다.<br>\r\n");
      out.write("\t\t\t\t\t\t\t\t<br> 제14조(분쟁해결)<br> ① “회사”는 이용자가 제기하는 정당한 의견이나 불만을\r\n");
      out.write("\t\t\t\t\t\t\t\t반영하고 그 피해를 보상처리하기 위하여 피해보상처리기구를 설치.운영합니다.<br> ② “회사”는\r\n");
      out.write("\t\t\t\t\t\t\t\t이용자로부터 제출되는 불만사항 및 의견은 우선적으로 그 사항을 처리합니다. 다만, 신속한 처리가 곤란한 경우에는\r\n");
      out.write("\t\t\t\t\t\t\t\t이용자에게 그 사유와 처리일정을 즉시 통보해 드립니다.<br> ③ “회사”와 이용자간에 발생한 전자상거래\r\n");
      out.write("\t\t\t\t\t\t\t\t분쟁과 관련하여 이용자의 피해구제신청이 있는 경우에는 공정거래위원회 또는 시•도지사가 의뢰하는 분쟁조정기관의 조정에\r\n");
      out.write("\t\t\t\t\t\t\t\t따를 수 있습니다.<br> <br> 제15조(재판권 및 준거법)<br> ① “회사”와\r\n");
      out.write("\t\t\t\t\t\t\t\t이용자간에 발생한 전자상거래 분쟁에 관한 소송은 제소 당시의 이용자의 주소에 의하고, 주소가 없는 경우에는 거소를\r\n");
      out.write("\t\t\t\t\t\t\t\t관할하는 지방법원의 전속관할로 합니다. 다만, 제소 당시 이용자의 주소 또는 거소가 분명하지 않거나 외국 거주자의\r\n");
      out.write("\t\t\t\t\t\t\t\t경우에는 민사소송법상의 관할법원에 제기합니다.<br> ② “회사”와 이용자간에 제기된 전자상거래 소송에는\r\n");
      out.write("\t\t\t\t\t\t\t\t국내법을 적용합니다.<br> <br> 부칙<br> 이 약관은 2013년 8월 12일부터\r\n");
      out.write("\t\t\t\t\t\t\t\t시행합니다.<br> &lt; 참 고 자 료 &gt;<br> 1. 표준약관 현행<br>\r\n");
      out.write("\t\t\t\t\t\t\t\t2. 한국소비자원의 심사청구 공문<br> 3. 관련 사업자단체 의견<br>\r\n");
      out.write("\t\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"jcheck\">\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"jagree1\" name=\"jagree\"  value=\"\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttitle=\"회원가입약관에 동의합니다 체크해주세요.\" onclick=\"eachagree();\"> <label for=\"jagree1\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t회원가입약관에 동의합니다.</label>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"authBoxWrap\">\r\n");
      out.write("\t\t\t\t\t\t<h3>\r\n");
      out.write("\t\t\t\t\t\t\t개인정보수집이용에 대한 안내<span class=\"colorPoint requiredTxt\">(*필수사항)</span>\r\n");
      out.write("\t\t\t\t\t\t</h3>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"authBox\">\r\n");
      out.write("\t\t\t\t\t\t\t<p class=\"jtxt\">\r\n");
      out.write("\t\t\t\t\t\t\t\t1. 수집하는 개인정보의 항목<br> &lt;가. 개인정보 수집항목&gt;<br> 첫째, 회사는\r\n");
      out.write("\t\t\t\t\t\t\t\t회원가입, 원활한 고객상담, 각종 서비스의 제공을 위해 최초 회원가입 당시 아래와 같은 최소한의 개인정보를\r\n");
      out.write("\t\t\t\t\t\t\t\t필수항목으로 수집하고 있습니다.<br> &lt;일반 회원가입&gt;<br> - 성명, 아이디,\r\n");
      out.write("\t\t\t\t\t\t\t\t비밀번호, 연락처(메일주소, 휴대폰 번호)<br> &lt;방문상담예약 등록시&gt;<br> -\r\n");
      out.write("\t\t\t\t\t\t\t\t성명, 아이디, 비밀번호, 연락처(메일주소, 휴대폰 번호)<br> &lt;전화상담예약 등록시&gt;<br>\r\n");
      out.write("\t\t\t\t\t\t\t\t성명, 전화번호, 서비스 이용과정이나 사업처리 과정에서 아래와 같은 정보들이 자동으로 생성되어 수집될 수 있습니다.<br>\r\n");
      out.write("\t\t\t\t\t\t\t\t- IP Address, 쿠키, 방문 일시, 서비스 이용 기록<br> &lt;나. 개인정보 수집방법&gt;<br>\r\n");
      out.write("\t\t\t\t\t\t\t\t회사는 다음과 같은 방법으로 개인정보를 수집합니다.<br> - 홈페이지, 방문상담예약, 전화상담예약<br>\r\n");
      out.write("\t\t\t\t\t\t\t\t<br> 2. 개인정보의 수집 및 이용목적<br> &lt;가. 회원관리&gt;<br> -\r\n");
      out.write("\t\t\t\t\t\t\t\t회원제 서비스 이용 및 제한적 본인 확인제에 따른 본인확인, 개인식별, 가입의사 확인, 가입 및 가입횟수 제한,\r\n");
      out.write("\t\t\t\t\t\t\t\t만14세 미만 아동 개인정보 수집 시 법정 대리인 동의여부 확인, 추후 법정 대리인 본인확인, 분쟁 조정을 위한\r\n");
      out.write("\t\t\t\t\t\t\t\t기록보존, 불만처리 등 민원처리, 고지사항 전달<br> &lt;나. 신규 서비스 개발 및 마케팅•광고에의\r\n");
      out.write("\t\t\t\t\t\t\t\t활용&gt;<br> - 신규 서비스 개발 및 맞춤 서비스 제공, 통계학적 특성에 따른 서비스 제공 및 광고\r\n");
      out.write("\t\t\t\t\t\t\t\t게재, 서비스의 유효성 확인, 이벤트 및 광고성 정보 제공 및 참여기회 제공, 접속빈도 파악, 회원의 서비스이용에\r\n");
      out.write("\t\t\t\t\t\t\t\t대한 통계<br> <br> 3. 개인정보의 보유 및 이용기간<br> 이용자의 개인정보는\r\n");
      out.write("\t\t\t\t\t\t\t\t원칙적으로 개인정보의 수집 및 이용목적이 달성되면 지체 없이 파기합니다. 단, 다음의 정보에 대해서는 아래의 이유로\r\n");
      out.write("\t\t\t\t\t\t\t\t명시한 기간 동안 보존합니다.<br> &lt;가. 회사 내부 방침에 의한 정보보유 사유&gt;<br>\r\n");
      out.write("\t\t\t\t\t\t\t\t• 부정이용기록<br> - 보존 이유 : 부정 이용 방지<br> - 보존 기간 : 1년\r\n");
      out.write("\t\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"jcheck\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"jagree2\" name=\"jagree\"  onclick=\"eachagree();\" value=\"\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttitle=\"개인정보취급방침에 동의합니다 체크해주세요.\"> <label for=\"jagree2\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t개인정보취급방침에 동의합니다.</label>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"jpage_move\">\r\n");
      out.write("\t\t\t\t\t<span><a href=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\" class=\"jbefore_move\" style=\"opacity:1\" \r\n");
      out.write("\t\t\t\t\t\tonmouseover=\"this.style.opacity='0.7'\" \r\n");
      out.write("\t\t\t\t\t\tonmouseout=\"this.style.opacity='1'\">이전단계</a></span>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\t");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t\t");
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\t</div>\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<!--joinWrap:e-->\r\n");
      out.write("</section>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\t<!-- footer -->\r\n");
      out.write("\t");
      if (_jspx_meth_c_005fimport_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fimport_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:import
    org.apache.taglibs.standard.tag.rt.core.ImportTag _jspx_th_c_005fimport_005f0 = (org.apache.taglibs.standard.tag.rt.core.ImportTag) _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ImportTag.class);
    boolean _jspx_th_c_005fimport_005f0_reused = false;
    try {
      _jspx_th_c_005fimport_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fimport_005f0.setParent(null);
      // /WEB-INF/views/member/enrollAuthPage.jsp(195,0) name = url type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fimport_005f0.setUrl("/WEB-INF/views/common/meta.jsp");
      int[] _jspx_push_body_count_c_005fimport_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fimport_005f0 = _jspx_th_c_005fimport_005f0.doStartTag();
        if (_jspx_th_c_005fimport_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fimport_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fimport_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fimport_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.reuse(_jspx_th_c_005fimport_005f0);
      _jspx_th_c_005fimport_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fimport_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fimport_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fimport_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:import
    org.apache.taglibs.standard.tag.rt.core.ImportTag _jspx_th_c_005fimport_005f1 = (org.apache.taglibs.standard.tag.rt.core.ImportTag) _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ImportTag.class);
    boolean _jspx_th_c_005fimport_005f1_reused = false;
    try {
      _jspx_th_c_005fimport_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fimport_005f1.setParent(null);
      // /WEB-INF/views/member/enrollAuthPage.jsp(198,0) name = url type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fimport_005f1.setUrl("/WEB-INF/views/common/header.jsp");
      int[] _jspx_push_body_count_c_005fimport_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fimport_005f1 = _jspx_th_c_005fimport_005f1.doStartTag();
        if (_jspx_th_c_005fimport_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fimport_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fimport_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fimport_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.reuse(_jspx_th_c_005fimport_005f1);
      _jspx_th_c_005fimport_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fimport_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fimport_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/member/enrollAuthPage.jsp(241,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${child eq 'Y'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("<!--  14세 미만 회원일 경우&sns간편회원가입 아닌 경우만 보여짐 -->\r\n");
          out.write("\t\t\t<!-- 14세미만 보호자 확인 -->\r\n");
          out.write("\t\t\t<div class=\"under_f_check\">\t\r\n");
          out.write("\t\t\r\n");
          out.write("\t\t\t\t<form action=\"test3.do\" method=\"post\">\r\n");
          out.write("\t\t\t\t\t\r\n");
          out.write("\t\t\t\t\t<h2>보호자 인증 휴대폰 번호</h2><span class=\"id_txt\">(-없이 숫자만 입력하세요)</span>\r\n");
          out.write("\t\t\t\t\t<input type=\"text\" id=\"phone\" name=\"phone\" class=\"inputPhone\"\r\n");
          out.write("\t\t\t\t\t\tmaxlength=\"20\" style=\"width:120px;\">\t\t\t\t\t\r\n");
          out.write("\t\t\t\t\t\r\n");
          out.write("\t\t\t\t\t\t\r\n");
          out.write("\t\t\t\t\t\t<input type='button' onclick='return enrollSubmit2();'\r\n");
          out.write("\t\t\t\t\t\t\tvalue='인증번호 전송' style=\"opacity: 1; background-color:#ded9d9; width:120px;cursor:pointer;\" onmouseover=\"this.style.opacity='0.7'\"\r\n");
          out.write("\t\t\t\t\t\tonmouseout=\"this.style.opacity='1'\">\r\n");
          out.write("\t\t\t\t\t\t<input type=\"text\" name=\"phonekey\" id=\"phonekey\" maxlength=\"13\" style=\"width:120px;\">\r\n");
          out.write("\t\t\t\t\t\t<input type='button' onclick='checkKey();' value='번호 확인' style=\"opacity: 1; width:100px;background-color:#ded9d9;cursor:pointer;\" onmouseover=\"this.style.opacity='0.7'\"\r\n");
          out.write("\t\t\t\t\t\tonmouseout=\"this.style.opacity='1'\">\r\n");
          out.write("\t\t\t\t\t\t<div id=\"demo\" class=\"demo\"></div>\r\n");
          out.write("\t\t\t\t\t\t<div class=\"check_font\" id=\"phone_check\"></div>\r\n");
          out.write("\t\t\t\t\t\t<br>\r\n");
          out.write("\t\t\t\t\t\t\r\n");
          out.write("\t\t\t\t\t<br>\r\n");
          out.write("\t\t\t\t\t\r\n");
          out.write("\t\t\t\t\t\r\n");
          out.write("\r\n");
          out.write("\r\n");
          out.write("\t\t\t\r\n");
          out.write("\t\t\t\t</form>\r\n");
          out.write("\t\t\t</div>\r\n");
          out.write("\t\t\t<hr>\r\n");
          out.write("\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /WEB-INF/views/member/enrollAuthPage.jsp(435,20) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("typepage.do");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/member/enrollAuthPage.jsp(439,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty id}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("<!--일반 회원 가입시 -->\r\n");
          out.write("\t\t\t\t\t<span>\r\n");
          out.write("\t\t\t\t\t\t");
          if (_jspx_meth_c_005furl_005f1(_jspx_th_c_005fif_005f1, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t\t\t\t\t \r\n");
          out.write("\t\t\t\t\t<a href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${enrollch}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" class=\"jafter_move\"style=\"opacity:1\" \r\n");
          out.write("\t\t\t\t\t\tonmouseover=\"this.style.opacity='0.7'\" \r\n");
          out.write("\t\t\t\t\t\tonmouseout=\"this.style.opacity='1'\" onclick='return checkNext(); '>다음단계</a>\r\n");
          out.write("\t\t\t\t\t</span>\r\n");
          out.write("\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f1 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvar_005fvalue.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f1_reused = false;
    try {
      _jspx_th_c_005furl_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
      // /WEB-INF/views/member/enrollAuthPage.jsp(441,6) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f1.setVar("enrollch");
      // /WEB-INF/views/member/enrollAuthPage.jsp(441,6) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f1.setValue("enrollpage.do");
      int _jspx_eval_c_005furl_005f1 = _jspx_th_c_005furl_005f1.doStartTag();
      if (_jspx_eval_c_005furl_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        if (_jspx_eval_c_005furl_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_c_005furl_005f1);
        }
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t");
          if (_jspx_meth_c_005fparam_005f0(_jspx_th_c_005furl_005f1, _jspx_page_context))
            return true;
          out.write(" \r\n");
          out.write("\t\t\t\t\t\t\r\n");
          out.write("\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005furl_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
        if (_jspx_eval_c_005furl_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.popBody();
        }
      }
      if (_jspx_th_c_005furl_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvar_005fvalue.reuse(_jspx_th_c_005furl_005f1);
      _jspx_th_c_005furl_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f1, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fparam_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005furl_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:param
    org.apache.taglibs.standard.tag.rt.core.ParamTag _jspx_th_c_005fparam_005f0 = (org.apache.taglibs.standard.tag.rt.core.ParamTag) _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ParamTag.class);
    boolean _jspx_th_c_005fparam_005f0_reused = false;
    try {
      _jspx_th_c_005fparam_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fparam_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005furl_005f1);
      // /WEB-INF/views/member/enrollAuthPage.jsp(442,7) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fparam_005f0.setName("child");
      // /WEB-INF/views/member/enrollAuthPage.jsp(442,7) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fparam_005f0.setValue((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${child}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fparam_005f0 = _jspx_th_c_005fparam_005f0.doStartTag();
      if (_jspx_th_c_005fparam_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.reuse(_jspx_th_c_005fparam_005f0);
      _jspx_th_c_005fparam_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fparam_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fparam_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent(null);
      // /WEB-INF/views/member/enrollAuthPage.jsp(451,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${!empty id}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("<!--SNS 회원 가입시 -->\r\n");
          out.write("\t\t\t\t\t<span>\r\n");
          out.write("\t\t\t\t\t\t");
          if (_jspx_meth_c_005furl_005f2(_jspx_th_c_005fif_005f2, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t\t\t\t<a href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${enrollsnsch}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" class=\"jafter_move\"style=\"opacity:1\" \r\n");
          out.write("\t\t\t\t\t\tonmouseover=\"this.style.opacity='0.7'\" \r\n");
          out.write("\t\t\t\t\t\tonmouseout=\"this.style.opacity='1'\" onclick='return checkNext();'>다음단계</a>\r\n");
          out.write("\t\t\t\t\t</span>\r\n");
          out.write("\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f2 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvar_005fvalue.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f2_reused = false;
    try {
      _jspx_th_c_005furl_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f2);
      // /WEB-INF/views/member/enrollAuthPage.jsp(453,6) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f2.setVar("enrollsnsch");
      // /WEB-INF/views/member/enrollAuthPage.jsp(453,6) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f2.setValue("enrollsnspage.do");
      int _jspx_eval_c_005furl_005f2 = _jspx_th_c_005furl_005f2.doStartTag();
      if (_jspx_eval_c_005furl_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        if (_jspx_eval_c_005furl_005f2 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_c_005furl_005f2);
        }
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t");
          if (_jspx_meth_c_005fparam_005f1(_jspx_th_c_005furl_005f2, _jspx_page_context))
            return true;
          out.write(" \r\n");
          out.write("\t\t\t\t\t\t\t\r\n");
          out.write("\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005furl_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
        if (_jspx_eval_c_005furl_005f2 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.popBody();
        }
      }
      if (_jspx_th_c_005furl_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvar_005fvalue.reuse(_jspx_th_c_005furl_005f2);
      _jspx_th_c_005furl_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f2, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fparam_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005furl_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:param
    org.apache.taglibs.standard.tag.rt.core.ParamTag _jspx_th_c_005fparam_005f1 = (org.apache.taglibs.standard.tag.rt.core.ParamTag) _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ParamTag.class);
    boolean _jspx_th_c_005fparam_005f1_reused = false;
    try {
      _jspx_th_c_005fparam_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fparam_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005furl_005f2);
      // /WEB-INF/views/member/enrollAuthPage.jsp(454,7) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fparam_005f1.setName("child");
      // /WEB-INF/views/member/enrollAuthPage.jsp(454,7) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fparam_005f1.setValue((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${child}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fparam_005f1 = _jspx_th_c_005fparam_005f1.doStartTag();
      if (_jspx_th_c_005fparam_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.reuse(_jspx_th_c_005fparam_005f1);
      _jspx_th_c_005fparam_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fparam_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fparam_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fimport_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:import
    org.apache.taglibs.standard.tag.rt.core.ImportTag _jspx_th_c_005fimport_005f2 = (org.apache.taglibs.standard.tag.rt.core.ImportTag) _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ImportTag.class);
    boolean _jspx_th_c_005fimport_005f2_reused = false;
    try {
      _jspx_th_c_005fimport_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fimport_005f2.setParent(null);
      // /WEB-INF/views/member/enrollAuthPage.jsp(472,1) name = url type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fimport_005f2.setUrl("/WEB-INF/views/common/footer.jsp");
      int[] _jspx_push_body_count_c_005fimport_005f2 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fimport_005f2 = _jspx_th_c_005fimport_005f2.doStartTag();
        if (_jspx_th_c_005fimport_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fimport_005f2[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fimport_005f2.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fimport_005f2.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.reuse(_jspx_th_c_005fimport_005f2);
      _jspx_th_c_005fimport_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fimport_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fimport_005f2_reused);
    }
    return false;
  }
}
